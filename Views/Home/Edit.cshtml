@model RecipeApp.Models.Recipe

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <script>
                    function addInputField(id){
                        let count = document.getElementById(id).childElementCount
                        const secId = document.getElementById(id);
                        const newInputEl = document.createElement('input');
                        newInputEl.type = 'text';
                        newInputEl.name = id=='InGroup'?`Ingredients[${count+1}]`:`Tags[${count+1}]`
                        newInputEl.className = 'form-control';
                        secId.appendChild(newInputEl);


                    }

                    function handleSave(){
                        let IngInputs = document.getElementById('InGroup')
                        for(let i = 0;i<IngInputs.Length;i++){
                            if(IngInputs[i].value == null){
                                IngInputs.pop(i) // just an arbitrary code
                            }
                        }
                    }
                   


                    
                </script>

    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" class="form-control" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ingredients" class="control-label"></label>
                
                @for(int i =0;i<Model.Ingredients.Length;i++){

                    <div id="InGroup">

                    <input asp-for='Ingredients[i]' class="form-control" />
                    </div>
                }
                <button type="button" onclick="addInputField('InGroup')">+</button>
                <span asp-validation-for="Ingredients" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tags" class="control-label"></label>
                
                @for(int tag=0;tag<Model.Tags.Length;tag++){
                    <div id="TagGroup">
                    <input asp-for='Tags[tag]' class="form-control">
                </div>
                }
                
                <button type="button" onclick="addInputField('TagGroup')">+</button>

                <span asp-validation-for="Tags" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PublishDate" class="control-label"></label>
                <input asp-for="PublishDate" class="form-control" />
                <span asp-validation-for="PublishDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input onclick="handleSave()" type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
